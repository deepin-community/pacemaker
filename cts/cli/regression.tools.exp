Created new pacemaker configuration
Setting up shadow instance
A new shadow instance was created.  To begin using it paste the following into your shell:
  CIB_shadow=cts-cli ; export CIB_shadow
=#=#=#= Begin test: Validate CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= Current cib after: Validate CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Validate CIB - OK (0) =#=#=#=
* Passed: cibadmin       - Validate CIB
=#=#=#= Begin test: Configure something before erasing =#=#=#=
=#=#=#= Current cib after: Configure something before erasing =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Configure something before erasing - OK (0) =#=#=#=
* Passed: crm_attribute  - Configure something before erasing
=#=#=#= Begin test: Require --force for CIB erasure =#=#=#=
The supplied command is considered dangerous.  To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= Current cib after: Require --force for CIB erasure =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Require --force for CIB erasure - Operation not safe (107) =#=#=#=
* Passed: cibadmin       - Require --force for CIB erasure
=#=#=#= Begin test: Allow CIB erasure with --force =#=#=#=
=#=#=#= End test: Allow CIB erasure with --force - OK (0) =#=#=#=
* Passed: cibadmin       - Allow CIB erasure with --force
=#=#=#= Begin test: Query CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= Current cib after: Query CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query CIB - OK (0) =#=#=#=
* Passed: cibadmin       - Query CIB
=#=#=#= Begin test: Set cluster option =#=#=#=
=#=#=#= Current cib after: Set cluster option =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set cluster option - OK (0) =#=#=#=
* Passed: crm_attribute  - Set cluster option
=#=#=#= Begin test: Query new cluster option =#=#=#=
    <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
=#=#=#= Current cib after: Query new cluster option =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query new cluster option - OK (0) =#=#=#=
* Passed: cibadmin       - Query new cluster option
=#=#=#= Begin test: Query cluster options =#=#=#=
=#=#=#= Current cib after: Query cluster options =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query cluster options - OK (0) =#=#=#=
* Passed: cibadmin       - Query cluster options
=#=#=#= Begin test: Set no-quorum policy =#=#=#=
=#=#=#= Current cib after: Set no-quorum policy =#=#=#=
<cib epoch="3" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set no-quorum policy - OK (0) =#=#=#=
* Passed: crm_attribute  - Set no-quorum policy
=#=#=#= Begin test: Delete nvpair =#=#=#=
=#=#=#= Current cib after: Delete nvpair =#=#=#=
<cib epoch="4" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete nvpair - OK (0) =#=#=#=
* Passed: cibadmin       - Delete nvpair
=#=#=#= Begin test: Create operation should fail =#=#=#=
Call failed: File exists
<failed>
  <failed_update id="cib-bootstrap-options" object_type="cluster_property_set" operation="cib_create" reason="File exists">
    <cluster_property_set id="cib-bootstrap-options">
      <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
    </cluster_property_set>
  </failed_update>
</failed>
=#=#=#= Current cib after: Create operation should fail =#=#=#=
<cib epoch="4" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create operation should fail - Requested item already exists (108) =#=#=#=
* Passed: cibadmin       - Create operation should fail
=#=#=#= Begin test: Modify cluster options section =#=#=#=
=#=#=#= Current cib after: Modify cluster options section =#=#=#=
<cib epoch="5" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Modify cluster options section - OK (0) =#=#=#=
* Passed: cibadmin       - Modify cluster options section
=#=#=#= Begin test: Query updated cluster option =#=#=#=
    <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
=#=#=#= Current cib after: Query updated cluster option =#=#=#=
<cib epoch="5" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query updated cluster option - OK (0) =#=#=#=
* Passed: cibadmin       - Query updated cluster option
=#=#=#= Begin test: Set duplicate cluster option =#=#=#=
=#=#=#= Current cib after: Set duplicate cluster option =#=#=#=
<cib epoch="6" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="40s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set duplicate cluster option - OK (0) =#=#=#=
* Passed: crm_attribute  - Set duplicate cluster option
=#=#=#= Begin test: Setting multiply defined cluster option should fail =#=#=#=
Multiple attributes match name=cluster-delay
  Value: 60s 	(id=cib-bootstrap-options-cluster-delay)
  Value: 40s 	(id=duplicate-cluster-delay)
Please choose from one of the matches above and supply the 'id' with --attr-id
=#=#=#= Current cib after: Setting multiply defined cluster option should fail =#=#=#=
<cib epoch="6" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="40s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Setting multiply defined cluster option should fail - Multiple items match request (109) =#=#=#=
* Passed: crm_attribute  - Setting multiply defined cluster option should fail
=#=#=#= Begin test: Set cluster option with -s =#=#=#=
=#=#=#= Current cib after: Set cluster option with -s =#=#=#=
<cib epoch="7" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set cluster option with -s - OK (0) =#=#=#=
* Passed: crm_attribute  - Set cluster option with -s
=#=#=#= Begin test: Delete cluster option with -i =#=#=#=
Deleted crm_config option: id=(null) name=cluster-delay

=#=#=#= Current cib after: Delete cluster option with -i =#=#=#=
<cib epoch="8" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete cluster option with -i - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete cluster option with -i
=#=#=#= Begin test: Create node1 and bring it online =#=#=#=
Current cluster status:

Performing Requested Modifications:
  * Bringing node node1 online

Transition Summary:

Executing Cluster Transition:

Revised Cluster Status:
  * Node List:
    * Online: [ node1 ]

=#=#=#= Current cib after: Create node1 and bring it online =#=#=#=
<cib epoch="9" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1"/>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Create node1 and bring it online - OK (0) =#=#=#=
* Passed: crm_simulate   - Create node1 and bring it online
=#=#=#= Begin test: Create node attribute =#=#=#=
=#=#=#= Current cib after: Create node attribute =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Create node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Create node attribute
=#=#=#= Begin test: Query new node attribute =#=#=#=
      <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
=#=#=#= Current cib after: Query new node attribute =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Query new node attribute - OK (0) =#=#=#=
* Passed: cibadmin       - Query new node attribute
=#=#=#= Begin test: Set a transient (fail-count) node attribute =#=#=#=
=#=#=#= Current cib after: Set a transient (fail-count) node attribute =#=#=#=
<cib epoch="10" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="3"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a transient (fail-count) node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a transient (fail-count) node attribute
=#=#=#= Begin test: Query a fail count =#=#=#=
scope=status  name=fail-count-foo value=3
=#=#=#= Current cib after: Query a fail count =#=#=#=
<cib epoch="10" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="3"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query a fail count - OK (0) =#=#=#=
* Passed: crm_failcount  - Query a fail count
=#=#=#= Begin test: Delete a transient (fail-count) node attribute =#=#=#=
Deleted status attribute: id=status-node1-fail-count-foo name=fail-count-foo

=#=#=#= Current cib after: Delete a transient (fail-count) node attribute =#=#=#=
<cib epoch="10" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete a transient (fail-count) node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete a transient (fail-count) node attribute
=#=#=#= Begin test: Digest calculation =#=#=#=
Digest: =#=#=#= Current cib after: Digest calculation =#=#=#=
<cib epoch="10" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Digest calculation - OK (0) =#=#=#=
* Passed: cibadmin       - Digest calculation
=#=#=#= Begin test: Replace operation should fail =#=#=#=
Call failed: Update was older than existing configuration
=#=#=#= Current cib after: Replace operation should fail =#=#=#=
<cib epoch="10" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Replace operation should fail - Update was older than existing configuration (103) =#=#=#=
* Passed: cibadmin       - Replace operation should fail
=#=#=#= Begin test: Default standby value =#=#=#=
scope=status  name=standby value=off
=#=#=#= Current cib after: Default standby value =#=#=#=
<cib epoch="10" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Default standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Default standby value
=#=#=#= Begin test: Set standby status =#=#=#=
=#=#=#= Current cib after: Set standby status =#=#=#=
<cib epoch="11" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-standby" name="standby" value="true"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set standby status - OK (0) =#=#=#=
* Passed: crm_standby    - Set standby status
=#=#=#= Begin test: Query standby value =#=#=#=
scope=nodes  name=standby value=true
=#=#=#= Current cib after: Query standby value =#=#=#=
<cib epoch="11" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-standby" name="standby" value="true"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Query standby value
=#=#=#= Begin test: Delete standby value =#=#=#=
Deleted nodes attribute: id=nodes-node1-standby name=standby

=#=#=#= Current cib after: Delete standby value =#=#=#=
<cib epoch="12" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Delete standby value
=#=#=#= Begin test: Create a resource =#=#=#=
=#=#=#= Current cib after: Create a resource =#=#=#=
<cib epoch="13" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource - OK (0) =#=#=#=
* Passed: cibadmin       - Create a resource
=#=#=#= Begin test: Create a resource meta attribute =#=#=#=
Set 'dummy' option: id=dummy-meta_attributes-is-managed set=dummy-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes">
          <nvpair id="dummy-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute
=#=#=#= Begin test: Query a resource meta attribute =#=#=#=
false
=#=#=#= Current cib after: Query a resource meta attribute =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes">
          <nvpair id="dummy-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Query a resource meta attribute
=#=#=#= Begin test: Remove a resource meta attribute =#=#=#=
Deleted 'dummy' option: id=dummy-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Remove a resource meta attribute =#=#=#=
<cib epoch="15" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Remove a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Remove a resource meta attribute
=#=#=#= Begin test: Create another resource meta attribute =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy --meta -p target-role -v Stopped --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create another resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create another resource meta attribute
=#=#=#= Begin test: Show why a resource is not running =#=#=#=
Resource dummy is not running
Configuration specifies 'dummy' should remain stopped
=#=#=#= End test: Show why a resource is not running - OK (0) =#=#=#=
* Passed: crm_resource   - Show why a resource is not running
=#=#=#= Begin test: Remove another resource meta attribute =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy --meta -d target-role --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Remove another resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Remove another resource meta attribute
=#=#=#= Begin test: Create a resource attribute =#=#=#=
Set 'dummy' option: id=dummy-instance_attributes-delay set=dummy-instance_attributes name=delay value=10s
=#=#=#= Current cib after: Create a resource attribute =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource attribute
=#=#=#= Begin test: List the configured resources =#=#=#=
Full List of Resources:
  * dummy	(ocf:pacemaker:Dummy):	 Stopped
=#=#=#= Current cib after: List the configured resources =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: List the configured resources - OK (0) =#=#=#=
* Passed: crm_resource   - List the configured resources
=#=#=#= Begin test: List the configured resources in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -L --output-as=xml">
  <resources>
    <resource id="dummy" resource_agent="ocf:pacemaker:Dummy" role="Stopped" active="false" orphaned="false" blocked="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
  </resources>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List the configured resources in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List the configured resources in XML
=#=#=#= Begin test: List IDs of instantiated resources =#=#=#=
dummy
=#=#=#= End test: List IDs of instantiated resources - OK (0) =#=#=#=
* Passed: crm_resource   - List IDs of instantiated resources
=#=#=#= Begin test: Show XML configuration of resource =#=#=#=
dummy	(ocf:pacemaker:Dummy):	 Stopped
Resource XML:
<primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
  <meta_attributes id="dummy-meta_attributes"/>
  <instance_attributes id="dummy-instance_attributes">
    <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
  </instance_attributes>
</primitive>
=#=#=#= End test: Show XML configuration of resource - OK (0) =#=#=#=
* Passed: crm_resource   - Show XML configuration of resource
=#=#=#= Begin test: Require a destination when migrating a resource that is stopped =#=#=#=
crm_resource: Resource 'dummy' not moved: active in 0 locations.
To prevent 'dummy' from running on a specific location, specify a node.
=#=#=#= Current cib after: Require a destination when migrating a resource that is stopped =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Require a destination when migrating a resource that is stopped - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - Require a destination when migrating a resource that is stopped
=#=#=#= Begin test: Don't support migration to non-existent locations =#=#=#=
crm_resource: Error performing operation: No such object
=#=#=#= Current cib after: Don't support migration to non-existent locations =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Don't support migration to non-existent locations - No such object (105) =#=#=#=
* Passed: crm_resource   - Don't support migration to non-existent locations
=#=#=#= Begin test: Create a fencing resource =#=#=#=
=#=#=#= Current cib after: Create a fencing resource =#=#=#=
<cib epoch="19" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a fencing resource - OK (0) =#=#=#=
* Passed: cibadmin       - Create a fencing resource
=#=#=#= Begin test: Bring resources online =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Stopped
    * Fence	(stonith:fence_true):	 Stopped

Transition Summary:
  * Start      dummy   ( node1 )
  * Start      Fence   ( node1 )

Executing Cluster Transition:
  * Resource action: dummy           monitor on node1
  * Resource action: Fence           monitor on node1
  * Resource action: dummy           start on node1
  * Resource action: Fence           start on node1

Revised Cluster Status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node1
=#=#=#= Current cib after: Bring resources online =#=#=#=
<cib epoch="19" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Bring resources online - OK (0) =#=#=#=
* Passed: crm_simulate   - Bring resources online
=#=#=#= Begin test: Try to move a resource to its existing location =#=#=#=
crm_resource: Error performing operation: Requested item already exists
=#=#=#= Current cib after: Try to move a resource to its existing location =#=#=#=
<cib epoch="19" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Try to move a resource to its existing location - Requested item already exists (108) =#=#=#=
* Passed: crm_resource   - Try to move a resource to its existing location
=#=#=#= Begin test: Move a resource from its existing location =#=#=#=
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Move a resource from its existing location =#=#=#=
<cib epoch="20" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Move a resource from its existing location - OK (0) =#=#=#=
* Passed: crm_resource   - Move a resource from its existing location
=#=#=#= Begin test: Clear out constraints generated by --move =#=#=#=
Removing constraint: cli-ban-dummy-on-node1
=#=#=#= Current cib after: Clear out constraints generated by --move =#=#=#=
<cib epoch="21" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Clear out constraints generated by --move - OK (0) =#=#=#=
* Passed: crm_resource   - Clear out constraints generated by --move
=#=#=#= Begin test: Default ticket granted state =#=#=#=
false
=#=#=#= Current cib after: Default ticket granted state =#=#=#=
<cib epoch="21" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Default ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Default ticket granted state
=#=#=#= Begin test: Set ticket granted state =#=#=#=
=#=#=#= Current cib after: Set ticket granted state =#=#=#=
<cib epoch="21" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" granted="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Set ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Set ticket granted state
=#=#=#= Begin test: Query ticket granted state =#=#=#=
false
=#=#=#= Current cib after: Query ticket granted state =#=#=#=
<cib epoch="21" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" granted="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Query ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket granted state
=#=#=#= Begin test: Delete ticket granted state =#=#=#=
=#=#=#= Current cib after: Delete ticket granted state =#=#=#=
<cib epoch="21" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Delete ticket granted state
=#=#=#= Begin test: Make a ticket standby =#=#=#=
=#=#=#= Current cib after: Make a ticket standby =#=#=#=
<cib epoch="21" num_updates="3" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="true"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Make a ticket standby - OK (0) =#=#=#=
* Passed: crm_ticket     - Make a ticket standby
=#=#=#= Begin test: Query ticket standby state =#=#=#=
true
=#=#=#= Current cib after: Query ticket standby state =#=#=#=
<cib epoch="21" num_updates="3" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="true"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Query ticket standby state - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket standby state
=#=#=#= Begin test: Activate a ticket =#=#=#=
=#=#=#= Current cib after: Activate a ticket =#=#=#=
<cib epoch="21" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Activate a ticket - OK (0) =#=#=#=
* Passed: crm_ticket     - Activate a ticket
=#=#=#= Begin test: Delete ticket standby state =#=#=#=
=#=#=#= Current cib after: Delete ticket standby state =#=#=#=
<cib epoch="21" num_updates="5" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket standby state - OK (0) =#=#=#=
* Passed: crm_ticket     - Delete ticket standby state
=#=#=#= Begin test: Ban a resource on unknown node =#=#=#=
crm_resource: Error performing operation: No such object
=#=#=#= Current cib after: Ban a resource on unknown node =#=#=#=
<cib epoch="21" num_updates="5" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Ban a resource on unknown node - No such object (105) =#=#=#=
* Passed: crm_resource   - Ban a resource on unknown node
=#=#=#= Begin test: Create two more nodes and bring them online =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node1

Performing Requested Modifications:
  * Bringing node node2 online
  * Bringing node node3 online

Transition Summary:
  * Move       Fence   ( node1 -> node2 )

Executing Cluster Transition:
  * Resource action: dummy           monitor on node3
  * Resource action: dummy           monitor on node2
  * Resource action: Fence           stop on node1
  * Resource action: Fence           monitor on node3
  * Resource action: Fence           monitor on node2
  * Resource action: Fence           start on node2

Revised Cluster Status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node2
=#=#=#= Current cib after: Create two more nodes and bring them online =#=#=#=
<cib epoch="23" num_updates="8" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create two more nodes and bring them online - OK (0) =#=#=#=
* Passed: crm_simulate   - Create two more nodes and bring them online
=#=#=#= Begin test: Ban dummy from node1 =#=#=#=
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Ban dummy from node1 =#=#=#=
<cib epoch="24" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Ban dummy from node1 - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node1
=#=#=#= Begin test: Show where a resource is running =#=#=#=
resource dummy is running on: node1
=#=#=#= End test: Show where a resource is running - OK (0) =#=#=#=
* Passed: crm_resource   - Show where a resource is running
=#=#=#= Begin test: Show constraints on a resource =#=#=#=
Locations:
  * Node node1 (score=-INFINITY, id=cli-ban-dummy-on-node1, rsc=dummy)
=#=#=#= End test: Show constraints on a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Show constraints on a resource
=#=#=#= Begin test: Ban dummy from node2 =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy -B -N node2 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Ban dummy from node2 =#=#=#=
<cib epoch="25" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Ban dummy from node2 - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node2
=#=#=#= Begin test: Relocate resources due to ban =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node2

Transition Summary:
  * Move       dummy   ( node1 -> node3 )

Executing Cluster Transition:
  * Resource action: dummy           stop on node1
  * Resource action: dummy           start on node3

Revised Cluster Status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node3
    * Fence	(stonith:fence_true):	 Started node2
=#=#=#= Current cib after: Relocate resources due to ban =#=#=#=
<cib epoch="25" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Relocate resources due to ban - OK (0) =#=#=#=
* Passed: crm_simulate   - Relocate resources due to ban
=#=#=#= Begin test: Move dummy to node1 =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy -M -N node1 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Move dummy to node1 =#=#=#=
<cib epoch="27" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Move dummy to node1 - OK (0) =#=#=#=
* Passed: crm_resource   - Move dummy to node1
=#=#=#= Begin test: Clear implicit constraints for dummy on node2 =#=#=#=
Removing constraint: cli-ban-dummy-on-node2
=#=#=#= Current cib after: Clear implicit constraints for dummy on node2 =#=#=#=
<cib epoch="28" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Clear implicit constraints for dummy on node2 - OK (0) =#=#=#=
* Passed: crm_resource   - Clear implicit constraints for dummy on node2
=#=#=#= Begin test: Drop the status section =#=#=#=
=#=#=#= End test: Drop the status section - OK (0) =#=#=#=
* Passed: cibadmin       - Drop the status section
=#=#=#= Begin test: Create a clone =#=#=#=
=#=#=#= End test: Create a clone - OK (0) =#=#=#=
* Passed: cibadmin       - Create a clone
=#=#=#= Begin test: Create a resource meta attribute =#=#=#=
Performing update of 'is-managed' on 'test-clone', the parent of 'test-primitive'
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed set=test-clone-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute =#=#=#=
<cib epoch="30" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy"/>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute
=#=#=#= Begin test: Create a resource meta attribute in the primitive =#=#=#=
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed set=test-primitive-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in the primitive =#=#=#=
<cib epoch="31" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the primitive - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the primitive
=#=#=#= Begin test: Update resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: false 	(id=test-primitive-meta_attributes-is-managed)
  Value: false 	(id=test-clone-meta_attributes-is-managed)

A value for 'is-managed' already exists in child 'test-primitive', performing update on that instead of 'test-clone'
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update resource meta attribute with duplicates =#=#=#=
<cib epoch="32" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Update resource meta attribute with duplicates
=#=#=#= Begin test: Update resource meta attribute with duplicates (force clone) =#=#=#=
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update resource meta attribute with duplicates (force clone) =#=#=#=
<cib epoch="33" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update resource meta attribute with duplicates (force clone) - OK (0) =#=#=#=
* Passed: crm_resource   - Update resource meta attribute with duplicates (force clone)
=#=#=#= Begin test: Update child resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: true 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=false
=#=#=#= Current cib after: Update child resource meta attribute with duplicates =#=#=#=
<cib epoch="34" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update child resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Update child resource meta attribute with duplicates
=#=#=#= Begin test: Delete resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: false 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

A value for 'is-managed' already exists in child 'test-primitive', performing delete on that instead of 'test-clone'
Deleted 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource meta attribute with duplicates =#=#=#=
<cib epoch="35" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource meta attribute with duplicates
=#=#=#= Begin test: Delete resource meta attribute in parent =#=#=#=
Performing delete of 'is-managed' on 'test-clone', the parent of 'test-primitive'
Deleted 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource meta attribute in parent =#=#=#=
<cib epoch="36" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource meta attribute in parent - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource meta attribute in parent
=#=#=#= Begin test: Create a resource meta attribute in the primitive =#=#=#=
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed set=test-primitive-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in the primitive =#=#=#=
<cib epoch="37" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the primitive - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the primitive
=#=#=#= Begin test: Update existing resource meta attribute =#=#=#=
A value for 'is-managed' already exists in child 'test-primitive', performing update on that instead of 'test-clone'
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update existing resource meta attribute =#=#=#=
<cib epoch="38" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update existing resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Update existing resource meta attribute
=#=#=#= Begin test: Create a resource meta attribute in the parent =#=#=#=
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed set=test-clone-meta_attributes name=is-managed value=true
=#=#=#= Current cib after: Create a resource meta attribute in the parent =#=#=#=
<cib epoch="39" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the parent - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the parent
=#=#=#= Begin test: Copy resources =#=#=#=
=#=#=#= End test: Copy resources - OK (0) =#=#=#=
* Passed: cibadmin       - Copy resources
=#=#=#= Begin test: Delete resource parent meta attribute (force) =#=#=#=
Deleted 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource parent meta attribute (force) =#=#=#=
<cib epoch="40" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource parent meta attribute (force) - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource parent meta attribute (force)
=#=#=#= Begin test: Restore duplicates =#=#=#=
=#=#=#= Current cib after: Restore duplicates =#=#=#=
<cib epoch="41" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Restore duplicates - OK (0) =#=#=#=
* Passed: cibadmin       - Restore duplicates
=#=#=#= Begin test: Delete resource child meta attribute =#=#=#=
Multiple attributes match name=is-managed
  Value: true 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

Deleted 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource child meta attribute =#=#=#=
<cib epoch="42" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource child meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource child meta attribute
=#=#=#= Begin test: Create a resource meta attribute in dummy1 =#=#=#=
Set 'dummy1' option: id=dummy1-meta_attributes-is-managed set=dummy1-meta_attributes name=is-managed value=true
=#=#=#= Current cib after: Create a resource meta attribute in dummy1 =#=#=#=
<cib epoch="44" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
      <group id="dummy-group">
        <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="dummy1-meta_attributes">
            <nvpair id="dummy1-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <primitive id="dummy2" class="ocf" provider="pacemaker" type="Dummy"/>
      </group>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in dummy1 - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in dummy1
=#=#=#= Begin test: Create a resource meta attribute in dummy-group =#=#=#=
Set 'dummy1' option: id=dummy1-meta_attributes-is-managed name=is-managed value=false
Set 'dummy-group' option: id=dummy-group-meta_attributes-is-managed set=dummy-group-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in dummy-group =#=#=#=
<cib epoch="46" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
      <group id="dummy-group">
        <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="dummy1-meta_attributes">
            <nvpair id="dummy1-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <primitive id="dummy2" class="ocf" provider="pacemaker" type="Dummy"/>
        <meta_attributes id="dummy-group-meta_attributes">
          <nvpair id="dummy-group-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </group>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in dummy-group - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in dummy-group
=#=#=#= Begin test: Specify a lifetime when moving a resource =#=#=#=
Migration will take effect until:
=#=#=#= Current cib after: Specify a lifetime when moving a resource =#=#=#=
<cib epoch="49" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started">
        <rule id="cli-prefer-rule-dummy" score="INFINITY" boolean-op="and">
          <expression id="cli-prefer-expr-dummy" attribute="#uname" operation="eq" value="node2" type="string"/>
          <date_expression id="cli-prefer-lifetime-end-dummy" operation="lt" end=""/>
        </rule>
      </rsc_location>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Specify a lifetime when moving a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Specify a lifetime when moving a resource
=#=#=#= Begin test: Try to move a resource previously moved with a lifetime =#=#=#=
=#=#=#= Current cib after: Try to move a resource previously moved with a lifetime =#=#=#=
<cib epoch="51" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Try to move a resource previously moved with a lifetime - OK (0) =#=#=#=
* Passed: crm_resource   - Try to move a resource previously moved with a lifetime
=#=#=#= Begin test: Ban dummy from node1 for a short time =#=#=#=
Migration will take effect until:
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Ban dummy from node1 for a short time =#=#=#=
<cib epoch="52" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started">
        <rule id="cli-ban-dummy-on-node1-rule" score="-INFINITY" boolean-op="and">
          <expression id="cli-ban-dummy-on-node1-expr" attribute="#uname" operation="eq" value="node1" type="string"/>
          <date_expression id="cli-ban-dummy-on-node1-lifetime" operation="lt" end=""/>
        </rule>
      </rsc_location>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Ban dummy from node1 for a short time - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node1 for a short time
=#=#=#= Begin test: Remove expired constraints =#=#=#=
Removing constraint: cli-ban-dummy-on-node1
=#=#=#= Current cib after: Remove expired constraints =#=#=#=
<cib epoch="53" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Remove expired constraints - OK (0) =#=#=#=
* Passed: crm_resource   - Remove expired constraints
=#=#=#= Begin test: Clear all implicit constraints for dummy =#=#=#=
Removing constraint: cli-prefer-dummy
=#=#=#= Current cib after: Clear all implicit constraints for dummy =#=#=#=
<cib epoch="54" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Clear all implicit constraints for dummy - OK (0) =#=#=#=
* Passed: crm_resource   - Clear all implicit constraints for dummy
=#=#=#= Begin test: Delete a resource =#=#=#=
=#=#=#= Current cib after: Delete a resource =#=#=#=
<cib epoch="55" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Delete a resource
=#=#=#= Begin test: Create an XML patchset =#=#=#=
<diff format="2">
  <version>
    <source admin_epoch="0" epoch="1" num_updates="0"/>
    <target admin_epoch="0" epoch="1" num_updates="0"/>
  </version>
  <change operation="delete" path="/cib/configuration/comment" position="0"/>
  <change operation="delete" path="/cib/configuration/comment" position="1"/>
  <change operation="delete" path="/cib/configuration/resources/comment" position="0"/>
  <change operation="delete" path="/cib/configuration/resources/primitive[@id=&apos;Fencing&apos;]/operations/op[@id=&apos;Fencing-start-0&apos;]"/>
  <change operation="modify" path="/cib/configuration/crm_config/cluster_property_set[@id=&apos;cib-bootstrap-options&apos;]/nvpair[@id=&apos;cib-bootstrap-options-cluster-name&apos;]">
    <change-list>
      <change-attr name="value" operation="set" value="mycluster"/>
      <change-attr name="name" operation="set" value="cluster-name"/>
    </change-list>
    <change-result>
      <nvpair id="cib-bootstrap-options-cluster-name" value="mycluster" name="cluster-name"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/configuration/nodes" position="4">
    <node id="4" uname="node4"/>
  </change>
  <change operation="create" path="/cib/configuration" position="3">
    <!-- hello world -->
  </change>
  <change operation="create" path="/cib/configuration/resources" position="0">
    <!-- test: modify this comment to say something different -->
  </change>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id=&apos;Fencing&apos;]/instance_attributes[@id=&apos;Fencing-params&apos;]/nvpair[@id=&apos;Fencing-pcmk_host_list&apos;]">
    <change-list>
      <change-attr name="value" operation="set" value="node1 node2 node3 node4"/>
    </change-list>
    <change-result>
      <nvpair id="Fencing-pcmk_host_list" name="pcmk_host_list" value="node1 node2 node3 node4"/>
    </change-result>
  </change>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id=&apos;Fencing&apos;]/operations/op[@id=&apos;Fencing-monitor-120s&apos;]">
    <change-list>
      <change-attr name="timeout" operation="set" value="120s"/>
      <change-attr name="name" operation="set" value="monitor"/>
    </change-list>
    <change-result>
      <op id="Fencing-monitor-120s" interval="120s" timeout="120s" name="monitor"/>
    </change-result>
  </change>
  <change operation="move" path="/cib/configuration/resources/primitive[@id=&apos;dummy&apos;]/instance_attributes[@id=&apos;dummy-params&apos;]/nvpair[@id=&apos;dummy-op_sleep&apos;]" position="1"/>
  <change operation="move" path="/cib/configuration/resources/primitive[@id=&apos;dummy&apos;]/instance_attributes[@id=&apos;dummy-params&apos;]/nvpair[@id=&apos;dummy-fake&apos;]" position="2"/>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id=&apos;dummy&apos;]/operations/op[@id=&apos;dummy-monitor-5s&apos;]">
    <change-list>
      <change-attr name="name" operation="set" value="monitor"/>
      <change-attr name="timeout" operation="unset"/>
    </change-list>
    <change-result>
      <op id="dummy-monitor-5s" interval="5s" name="monitor"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/configuration" position="6">
    <!-- test: move this comment to end of configuration -->
  </change>
</diff>

=#=#=#= End test: Create an XML patchset - Error occurred (1) =#=#=#=
* Passed: crm_diff       - Create an XML patchset
=#=#=#= Begin test: Check locations and constraints for prim1 =#=#=#=
=#=#=#= End test: Check locations and constraints for prim1 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim1
=#=#=#= Begin test: Recursively check locations and constraints for prim1 =#=#=#=
=#=#=#= End test: Recursively check locations and constraints for prim1 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim1
=#=#=#= Begin test: Check locations and constraints for prim1 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim1 --output-as=xml">
  <constraints/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim1 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim1 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim1 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim1 --output-as=xml">
  <constraints/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim1 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim1 in XML
=#=#=#= Begin test: Check locations and constraints for prim2 =#=#=#=
Locations:
  * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim2 is colocated with:
  * prim3 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
=#=#=#= End test: Check locations and constraints for prim2 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim2
=#=#=#= Begin test: Recursively check locations and constraints for prim2 =#=#=#=
Locations:
  * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim2 is colocated with:
  * prim3 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Resources prim3 is colocated with:
      * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
        * Locations:
          * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
        * Resources prim4 is colocated with:
          * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim2 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim2
=#=#=#= Begin test: Check locations and constraints for prim2 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim2 --output-as=xml">
  <constraints>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim2 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim2 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim2 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim2 --output-as=xml">
  <constraints>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim2 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim2 in XML
=#=#=#= Begin test: Check locations and constraints for prim3 =#=#=#=
Resources colocated with prim3:
  * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Locations:
      * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim3 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim3 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim3
=#=#=#= Begin test: Recursively check locations and constraints for prim3 =#=#=#=
Resources colocated with prim3:
  * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Locations:
      * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim3 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources prim4 is colocated with:
      * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim3 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim3
=#=#=#= Begin test: Check locations and constraints for prim3 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim3 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim3 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim3 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim3 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim3 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim3 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim3 in XML
=#=#=#= Begin test: Check locations and constraints for prim4 =#=#=#=
Locations:
  * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
Resources colocated with prim4:
  * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
  * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
Resources prim4 is colocated with:
  * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Check locations and constraints for prim4 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim4
=#=#=#= Begin test: Recursively check locations and constraints for prim4 =#=#=#=
Locations:
  * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
Resources colocated with prim4:
  * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
  * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Resources colocated with prim3:
      * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
        * Locations:
          * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim4 is colocated with:
  * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim4 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim4
=#=#=#= Begin test: Check locations and constraints for prim4 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim4 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim4 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim4 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim4 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim4 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim4 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim4 in XML
=#=#=#= Begin test: Check locations and constraints for prim5 =#=#=#=
Resources colocated with prim5:
  * prim4 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim5 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim5
=#=#=#= Begin test: Recursively check locations and constraints for prim5 =#=#=#=
Resources colocated with prim5:
  * prim4 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources colocated with prim4:
      * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
      * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
        * Resources colocated with prim3:
          * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
            * Locations:
              * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
=#=#=#= End test: Recursively check locations and constraints for prim5 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim5
=#=#=#= Begin test: Check locations and constraints for prim5 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim5 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim5 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim5 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim5 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim5 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim5 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim5 in XML
=#=#=#= Begin test: Check locations and constraints for prim6 =#=#=#=
Locations:
  * Node cluster02 (score=-INFINITY, id=prim6-not-on-cluster2, rsc=prim6)
=#=#=#= End test: Check locations and constraints for prim6 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim6
=#=#=#= Begin test: Recursively check locations and constraints for prim6 =#=#=#=
Locations:
  * Node cluster02 (score=-INFINITY, id=prim6-not-on-cluster2, rsc=prim6)
=#=#=#= End test: Recursively check locations and constraints for prim6 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim6
=#=#=#= Begin test: Check locations and constraints for prim6 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim6 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim6" id="prim6-not-on-cluster2" score="-INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim6 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim6 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim6 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim6 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim6" id="prim6-not-on-cluster2" score="-INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim6 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim6 in XML
=#=#=#= Begin test: Check locations and constraints for prim7 =#=#=#=
Resources prim7 is colocated with:
  * group (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Check locations and constraints for prim7 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim7
=#=#=#= Begin test: Recursively check locations and constraints for prim7 =#=#=#=
Resources prim7 is colocated with:
  * group (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim7 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim7
=#=#=#= Begin test: Check locations and constraints for prim7 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim7 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim7 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim7 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim7 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim7 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim7 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim7 in XML
=#=#=#= Begin test: Check locations and constraints for prim8 =#=#=#=
Resources prim8 is colocated with:
  * gr2 (score=INFINITY, id=colocation-prim8-gr2-INFINITY)
=#=#=#= End test: Check locations and constraints for prim8 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim8
=#=#=#= Begin test: Recursively check locations and constraints for prim8 =#=#=#=
Resources prim8 is colocated with:
  * gr2 (score=INFINITY, id=colocation-prim8-gr2-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim8 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim8
=#=#=#= Begin test: Check locations and constraints for prim8 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim8 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim8-gr2-INFINITY" rsc="prim8" with-rsc="gr2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim8 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim8 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim8 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim8 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim8-gr2-INFINITY" rsc="prim8" with-rsc="gr2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim8 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim8 in XML
=#=#=#= Begin test: Check locations and constraints for prim9 =#=#=#=
Resources prim9 is colocated with:
  * clone (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Check locations and constraints for prim9 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim9
=#=#=#= Begin test: Recursively check locations and constraints for prim9 =#=#=#=
Resources prim9 is colocated with:
  * clone (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim9 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim9
=#=#=#= Begin test: Check locations and constraints for prim9 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim9 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim9 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim9 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim9 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim9 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim9 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim9 in XML
=#=#=#= Begin test: Check locations and constraints for prim10 =#=#=#=
Resources prim10 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim10 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim10
=#=#=#= Begin test: Recursively check locations and constraints for prim10 =#=#=#=
Resources prim10 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources prim4 is colocated with:
      * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim10 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim10
=#=#=#= Begin test: Check locations and constraints for prim10 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim10 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim10 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim10 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim10 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim10 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim10 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim10 in XML
=#=#=#= Begin test: Check locations and constraints for prim11 =#=#=#=
Resources colocated with prim11:
  * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
Resources prim11 is colocated with:
  * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
=#=#=#= End test: Check locations and constraints for prim11 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim11
=#=#=#= Begin test: Recursively check locations and constraints for prim11 =#=#=#=
Resources colocated with prim11:
  * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
    * Resources colocated with prim13:
      * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
        * Resources colocated with prim12:
          * prim11 (id=colocation-prim11-prim12-INFINITY - loop)
Resources prim11 is colocated with:
  * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
    * Resources prim12 is colocated with:
      * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
        * Resources prim13 is colocated with:
          * prim11 (id=colocation-prim13-prim11-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim11 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim11
=#=#=#= Begin test: Check locations and constraints for prim11 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim11 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim11 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim11 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim11 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim11 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim11 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim11 in XML
=#=#=#= Begin test: Check locations and constraints for prim12 =#=#=#=
Resources colocated with prim12:
  * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
Resources prim12 is colocated with:
  * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
=#=#=#= End test: Check locations and constraints for prim12 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim12
=#=#=#= Begin test: Recursively check locations and constraints for prim12 =#=#=#=
Resources colocated with prim12:
  * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
    * Resources colocated with prim11:
      * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
        * Resources colocated with prim13:
          * prim12 (id=colocation-prim12-prim13-INFINITY - loop)
Resources prim12 is colocated with:
  * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
    * Resources prim13 is colocated with:
      * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
        * Resources prim11 is colocated with:
          * prim12 (id=colocation-prim11-prim12-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim12 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim12
=#=#=#= Begin test: Check locations and constraints for prim12 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim12 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim12 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim12 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim12 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim12 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim12 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim12 in XML
=#=#=#= Begin test: Check locations and constraints for prim13 =#=#=#=
Resources colocated with prim13:
  * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
Resources prim13 is colocated with:
  * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
=#=#=#= End test: Check locations and constraints for prim13 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim13
=#=#=#= Begin test: Recursively check locations and constraints for prim13 =#=#=#=
Resources colocated with prim13:
  * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
    * Resources colocated with prim12:
      * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
        * Resources colocated with prim11:
          * prim13 (id=colocation-prim13-prim11-INFINITY - loop)
Resources prim13 is colocated with:
  * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
    * Resources prim11 is colocated with:
      * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
        * Resources prim12 is colocated with:
          * prim13 (id=colocation-prim12-prim13-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim13 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim13
=#=#=#= Begin test: Check locations and constraints for prim13 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim13 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim13 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim13 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim13 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim13 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim13 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim13 in XML
=#=#=#= Begin test: Check locations and constraints for group =#=#=#=
Resources colocated with group:
  * prim7 (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Check locations and constraints for group - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group
=#=#=#= Begin test: Recursively check locations and constraints for group =#=#=#=
Resources colocated with group:
  * prim7 (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for group - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for group
=#=#=#= Begin test: Check locations and constraints for group in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r group --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for group in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group in XML
=#=#=#= Begin test: Recursively check locations and constraints for group in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r group --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for group in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for group in XML
=#=#=#= Begin test: Check locations and constraints for clone =#=#=#=
Resources colocated with clone:
  * prim9 (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Check locations and constraints for clone - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for clone
=#=#=#= Begin test: Recursively check locations and constraints for clone =#=#=#=
Resources colocated with clone:
  * prim9 (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for clone - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for clone
=#=#=#= Begin test: Check locations and constraints for clone in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r clone --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for clone in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for clone in XML
=#=#=#= Begin test: Recursively check locations and constraints for clone in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r clone --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for clone in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for clone in XML
=#=#=#= Begin test: Show resource digests =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml">
  <digests resource="rsc1" node="node1" task="start" interval="0ms">
    <digest type="all" hash="3acdbe4c12734ebeb1251a59545af936">
      <parameters passwd="secret" fake="0"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show resource digests - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource digests
=#=#=#= Begin test: Show resource digests with overrides =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml CRM_meta_interval=10000 CRM_meta_timeout=20000">
  <digests resource="rsc1" node="node1" task="start" interval="10000ms">
    <digest type="all" hash="720718e8d715d5d3be1403cbbcb953bc">
      <parameters passwd="secret" fake="0" CRM_meta_timeout="20000"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show resource digests with overrides - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource digests with overrides
=#=#=#= Begin test: List all nodes =#=#=#=
11
=#=#=#= End test: List all nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List all nodes
=#=#=#= Begin test: List cluster nodes =#=#=#=
6
=#=#=#= End test: List cluster nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List cluster nodes
=#=#=#= Begin test: List guest nodes =#=#=#=
2
=#=#=#= End test: List guest nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List guest nodes
=#=#=#= Begin test: List remote nodes =#=#=#=
3
=#=#=#= End test: List remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List remote nodes
=#=#=#= Begin test: List cluster,remote nodes =#=#=#=
9
=#=#=#= End test: List cluster,remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List cluster,remote nodes
=#=#=#= Begin test: List guest,remote nodes =#=#=#=
5
=#=#=#= End test: List guest,remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List guest,remote nodes
=#=#=#= Begin test: List a promotable clone resource =#=#=#=
resource promotable-clone is running on: cluster01
resource promotable-clone is running on: cluster02 Promoted
=#=#=#= End test: List a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List a promotable clone resource
=#=#=#= Begin test: List the primitive of a promotable clone resource =#=#=#=
resource promotable-rsc is running on: cluster01
resource promotable-rsc is running on: cluster02 Promoted
=#=#=#= End test: List the primitive of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List the primitive of a promotable clone resource
=#=#=#= Begin test: List a single instance of a promotable clone resource =#=#=#=
resource promotable-rsc:0 is running on: cluster02 Promoted
=#=#=#= End test: List a single instance of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List a single instance of a promotable clone resource
=#=#=#= Begin test: List another instance of a promotable clone resource =#=#=#=
resource promotable-rsc:1 is running on: cluster01
=#=#=#= End test: List another instance of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List another instance of a promotable clone resource
=#=#=#= Begin test: List a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-clone --output-as=xml">
  <nodes resource="promotable-clone">
    <node>cluster01</node>
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List a promotable clone resource in XML
=#=#=#= Begin test: List the primitive of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc --output-as=xml">
  <nodes resource="promotable-rsc">
    <node>cluster01</node>
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List the primitive of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List the primitive of a promotable clone resource in XML
=#=#=#= Begin test: List a single instance of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc:0 --output-as=xml">
  <nodes resource="promotable-rsc:0">
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List a single instance of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List a single instance of a promotable clone resource in XML
=#=#=#= Begin test: List another instance of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc:1 --output-as=xml">
  <nodes resource="promotable-rsc:1">
    <node>cluster01</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List another instance of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List another instance of a promotable clone resource in XML
=#=#=#= Begin test: Check that CIB_file="-" works - crm_mon =#=#=#=
Cluster Summary:
  * Stack: corosync
  * Current DC: cluster02 (version) - partition with quorum
  * Last updated:
  * Last change:
  * 5 nodes configured
  * 32 resource instances configured (4 DISABLED)

Node List:
  * Online: [ cluster01 cluster02 ]
  * GuestOnline: [ httpd-bundle-0@cluster01 httpd-bundle-1@cluster02 ]

Active Resources:
  * Clone Set: ping-clone [ping]:
    * Started: [ cluster01 cluster02 ]
  * Fencing	(stonith:fence_xvm):	 Started cluster01
  * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
  * Container bundle set: httpd-bundle [pcmk:http]:
    * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
    * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
    * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
  * Resource Group: exim-group:
    * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
    * Email	(lsb:exim):	 Started cluster02
  * Clone Set: mysql-clone-group [mysql-group]:
    * Started: [ cluster01 cluster02 ]
  * Clone Set: promotable-clone [promotable-rsc] (promotable):
    * Promoted: [ cluster02 ]
    * Unpromoted: [ cluster01 ]
=#=#=#= End test: Check that CIB_file="-" works - crm_mon - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crm_mon
=#=#=#= Begin test: Check that CIB_file="-" works - crm_resource =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml">
  <digests resource="rsc1" node="node1" task="start" interval="0ms">
    <digest type="all" hash="3acdbe4c12734ebeb1251a59545af936">
      <parameters passwd="secret" fake="0"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check that CIB_file="-" works - crm_resource - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crm_resource
=#=#=#= Begin test: Check that CIB_file="-" works - crmadmin =#=#=#=
11
=#=#=#= End test: Check that CIB_file="-" works - crmadmin - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crmadmin
